# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    
    - name: Validate composer.json and composer.lock
      run: composer validate
      working-directory: ./backend

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --ignore-platform-reqs
      working-directory: ./backend

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

#     - name: Run test suite
#       run: composer run-script test
#       working-directory: ./backend
      
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    #- run: npm ci
    #  working-directory: ./frontend
#     - run: npm run build --if-present
#       working-directory: ./frontend
#     - run: npm test
#       working-directory: ./frontend
